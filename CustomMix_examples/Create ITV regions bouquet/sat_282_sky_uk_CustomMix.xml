<custommix>
	<hacks>
<![CDATA[

ITVs = []
ITVsPlusOne = []
rest = []
last_section = max(sections.keys())
last_section_name = sections[last_section]

for service in sorted(services["sat_282_sky_uk"]["video"].keys()):
	if service in range(last_section, 1450) or service in (103, 203):
		# ITV regions
		ch_name = 'interactive_name' in services["sat_282_sky_uk"]["video"][service] and services["sat_282_sky_uk"]["video"][service]["interactive_name"] or services["sat_282_sky_uk"]["video"][service]["service_name"]
		if ch_name.startswith(("ITV", "STV", "UTV")):
			services["sat_282_sky_uk"]["video"][service]["ch_name"] = ch_name
			if "+1" not in ch_name:
				ITVs.append(services["sat_282_sky_uk"]["video"][service])
			else:
				ITVsPlusOne.append(services["sat_282_sky_uk"]["video"][service])
		else:
			rest.append(services["sat_282_sky_uk"]["video"][service])

i = last_section
sections[i] = "ITV Regions"

for service in sorted(ITVs, key=lambda x: x["ch_name"].lower()) + sorted(ITVsPlusOne, key=lambda x: x["ch_name"].lower()):
	customised["video"][i] = service
	i += 1

sections[i] = last_section_name
sort_list = []
for x in rest:
	sort_list.append((x, re.sub('^(?![a-z])', 'zzzzz', x['service_name'].lower())))
sort_list = sorted(sort_list, key=lambda listItem: listItem[1])
for service in sort_list:
	customised["video"][i] = service[0]
	i += 1

]]>
	</hacks>
</custommix>